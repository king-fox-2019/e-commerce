{"remainingRequest":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/src/components/AdminTransactions.vue?vue&type=style&index=0&id=7ea5b044&lang=scss&scoped=true&","dependencies":[{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/src/components/AdminTransactions.vue","mtime":1576433118761},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRhaW5lciB7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZy10b3A6IDUuN3JlbTsKfQo="},{"version":3,"sources":["AdminTransactions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;AACA;AACA","file":"AdminTransactions.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-if=\"confirming\">\n      <h3 class=\"text-center\">Waiting for Confirmation</h3>\n      <div class=\"mx-auto row w-100\">\n        <div\n          tag=\"div\"\n          class=\"transaction col-12 d-flex flex-column flex-md-row align-items-center align-items-md-start justify-content-center justify-content-md-start my-3 rounded\"\n          v-for=\"transaction in confirming\"\n          :key=\"transaction._id\"\n        >\n          <b-carousel\n            class=\"flex-shrink-0\"\n            :interval=\"3000\"\n            img-width=\"300\"\n            style=\"text-shadow: 1px 1px 2px #333; width: 400px !important;\"\n          >\n            <b-carousel-slide\n              v-for=\"item in transaction.items\"\n              :key=\"item.name\"\n              :text=\"item.name\"\n              :img-src=\"item.image\"\n            ></b-carousel-slide>\n          </b-carousel>\n\n          <div\n            class=\"ml-0 ml-md-2 mt-2 mt-md-0 text-center text-sm-left flex-grow-1\"\n          >\n            <p class=\"mt-3 mb-0 text-muted\">\n              {{ transaction.updatedAt | formatDate }}\n            </p>\n\n            <h3 class=\"mb-3\">{{ transaction.totalPrice | formatCurrency }}</h3>\n\n            <small class=\"text-muted\">\n              Item{{ transaction.items.length > 1 ? 's' : '' }}:\n              {{\n                transaction.items.length > 3\n                  ? transaction.items\n                      .slice(0, 2)\n                      .map(item => item.name)\n                      .join(', ') + ', and more...'\n                  : transaction.items.map(item => item.name).join(', ')\n              }}\n            </small>\n            <b-button\n              class=\"d-block mt-3\"\n              variant=\"outline-primary\"\n              @click=\"markDeliver(transaction._id)\"\n              >Deliver</b-button\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"delivering\">\n      <h3 class=\"text-center\">Delivering Items</h3>\n      <small class=\"text-muted d-block text-center\"\n        >Waiting for your customer delivered confirmation</small\n      >\n      <div class=\"mx-auto row w-100\">\n        <div\n          tag=\"div\"\n          class=\"transaction col-12 d-flex flex-column flex-md-row align-items-center align-items-md-start justify-content-center justify-content-md-start my-3 rounded\"\n          v-for=\"transaction in delivering\"\n          :key=\"transaction._id\"\n        >\n          <b-carousel\n            class=\"flex-shrink-0\"\n            :interval=\"3000\"\n            img-width=\"300\"\n            style=\"text-shadow: 1px 1px 2px #333; width: 400px !important;\"\n          >\n            <b-carousel-slide\n              v-for=\"item in transaction.items\"\n              :key=\"item.name\"\n              :text=\"item.name\"\n              :img-src=\"item.image\"\n            ></b-carousel-slide>\n          </b-carousel>\n\n          <div\n            class=\"ml-0 ml-md-2 mt-2 mt-md-0 text-center text-sm-left flex-grow-1\"\n          >\n            <p class=\"mt-3 mb-0 text-muted\">\n              {{ transaction.updatedAt | formatDate }}\n            </p>\n\n            <h3 class=\"mb-3\">{{ transaction.totalPrice | formatCurrency }}</h3>\n\n            <small class=\"text-muted\">\n              Item{{ transaction.items.length > 1 ? 's' : '' }}:\n              {{\n                transaction.items.length > 3\n                  ? transaction.items\n                      .slice(0, 2)\n                      .map(item => item.name)\n                      .join(', ') + ', and more...'\n                  : transaction.items.map(item => item.name).join(', ')\n              }}\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"done\">\n      <h3 class=\"text-center\">Transactions Completed</h3>\n      <div class=\"mx-auto row w-100\">\n        <div\n          tag=\"div\"\n          class=\"transaction col-12 d-flex flex-column flex-md-row align-items-center align-items-md-start justify-content-center justify-content-md-start my-3 rounded\"\n          v-for=\"transaction in done\"\n          :key=\"transaction._id\"\n        >\n          <b-carousel\n            class=\"flex-shrink-0\"\n            :interval=\"3000\"\n            img-width=\"300\"\n            style=\"text-shadow: 1px 1px 2px #333; width: 400px !important;\"\n          >\n            <b-carousel-slide\n              v-for=\"item in transaction.items\"\n              :key=\"item.name\"\n              :text=\"item.name\"\n              :img-src=\"item.image\"\n            ></b-carousel-slide>\n          </b-carousel>\n\n          <div\n            class=\"ml-0 ml-md-2 mt-2 mt-md-0 text-center text-sm-left flex-grow-1\"\n          >\n            <p class=\"mt-3 mb-0 text-muted\">\n              {{ transaction.updatedAt | formatDate }}\n            </p>\n\n            <h3 class=\"mb-3\">{{ transaction.totalPrice | formatCurrency }}</h3>\n\n            <small class=\"text-muted\">\n              Item{{ transaction.items.length > 1 ? 's' : '' }}:\n              {{\n                transaction.items.length > 3\n                  ? transaction.items\n                      .slice(0, 2)\n                      .map(item => item.name)\n                      .join(', ') + ', and more...'\n                  : transaction.items.map(item => item.name).join(', ')\n              }}\n            </small>\n            <p\n              :class=\"{\n                'text-success': transaction.status == 'done',\n                'text-danger': transaction.status == 'failed'\n              }\"\n            >\n              Status: {{ transaction.status }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    transactions() {\n      return this.$store.state.admin.transactions\n    },\n    confirming() {\n      const confirming = this.transactions.filter(t => t.status == 'confirming')\n      return confirming.length > 0 ? confirming : null\n    },\n    delivering() {\n      const delivering = this.transactions.filter(t => t.status == 'delivering')\n      return delivering.length > 0 ? delivering : null\n    },\n    done() {\n      const done = this.transactions.filter(\n        t => t.status == 'done' || t.status == 'failed'\n      )\n      return done.length > 0 ? done : null\n    }\n  },\n  methods: {\n    markDeliver(id) {\n      this.$store.dispatch('MARK_DELIVER', id)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  width: 100%;\n  padding-top: 5.7rem;\n}\n</style>\n"]}]}