{"remainingRequest":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/src/components/SignUp.vue?vue&type=style&index=0&id=d21a9130&lang=scss&scoped=true&","dependencies":[{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/src/components/SignUp.vue","mtime":1576127349403},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRhaW5lciB7CiAgaGVpZ2h0OiAxMDAlOwp9Cg=="},{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;AACA","file":"SignUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container row mx-auto justify-content-center align-items-center\">\n    <b-jumbotron\n      header-level=\"5\"\n      bg-variant=\"transparent\"\n      class=\"col-12 d-flex text-center pb-0 mb-0\"\n      id=\"landing-page\"\n      fluid\n    >\n      <template v-slot:header>Sign Up</template>\n    </b-jumbotron>\n    <b-form\n      class=\"col-12 col-md-8 col-lg-6 col-xl-5 align-self-start\"\n      @submit.prevent=\"onSubmit\"\n      novalidate\n    >\n      <b-form-group\n        label-for=\"username\"\n        description=\"Must only contains lowercase letters, numbers, dots and/or underscores.\"\n      >\n        <b-form-input\n          id=\"username\"\n          v-model.trim=\"username\"\n          type=\"text\"\n          placeholder=\"Username\"\n          :state=\"validateUsername\"\n          @focus=\"emptyUsername = false\"\n          required\n        ></b-form-input>\n        <b-popover\n          target=\"username\"\n          placement=\"right\"\n          variant=\"danger\"\n          content=\"Username cannot empty!\"\n          triggers\n          :show.sync=\"emptyUsername\"\n        ></b-popover>\n      </b-form-group>\n\n      <b-form-group\n        label-for=\"email\"\n        description=\"Must be a valid email format.\"\n      >\n        <b-form-input\n          id=\"email\"\n          v-model.trim=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          :state=\"validateEmail\"\n          @focus=\"emptyEmail = false\"\n          required\n        ></b-form-input>\n        <b-popover\n          target=\"email\"\n          placement=\"right\"\n          variant=\"danger\"\n          content=\"Email cannot empty!\"\n          triggers\n          :show.sync=\"emptyEmail\"\n        ></b-popover>\n      </b-form-group>\n\n      <b-form-group\n        label-for=\"password\"\n        description=\"Must have at least 6 characters.\"\n      >\n        <b-form-input\n          id=\"password\"\n          v-model=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          :state=\"validatePassword\"\n          @focus=\"emptyPassword = false\"\n          required\n        ></b-form-input>\n        <b-popover\n          target=\"password\"\n          placement=\"right\"\n          variant=\"danger\"\n          content=\"Password cannot empty!\"\n          triggers\n          :show.sync=\"emptyPassword\"\n        ></b-popover>\n      </b-form-group>\n\n      <b-button type=\"submit\" variant=\"primary\">Sign Up</b-button>\n    </b-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SignUp',\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      emptyUsername: false,\n      emptyEmail: false,\n      emptyPassword: false\n    }\n  },\n  computed: {\n    validateUsername() {\n      return this.username ? /^[a-zA-Z0-9_.]+$/.test(this.username) : null\n    },\n    validateEmail() {\n      return this.email\n        ? // eslint-disable-next-line no-useless-escape\n          /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n            this.email\n          )\n        : null\n    },\n    validatePassword() {\n      return this.password ? this.password.length >= 6 : null\n    }\n  },\n  methods: {\n    onSubmit() {\n      let isValid = true\n      const { username, email, password } = this\n      if (!username) {\n        this.emptyUsername = true\n        isValid = false\n      }\n      if (!email) {\n        this.emptyEmail = true\n        isValid = false\n      }\n      if (!password) {\n        this.emptyPassword = true\n        isValid = false\n      }\n      if (\n        isValid &&\n        this.validateUsername &&\n        this.validateEmail &&\n        this.validatePassword\n      ) {\n        const loader = this.$loading.show()\n        this.$store\n          .dispatch('ON_SIGN_UP', {\n            username,\n            email,\n            password\n          })\n          .then(({ data }) => {\n            this.$toasted.show(data.message)\n            this.$router.replace(this.$route.query.from)\n          })\n          .catch(({ response }) => {\n            this.password = ''\n            if (response) {\n              const message = response.data.message\n              if (typeof message != 'string') {\n                response.data.message.forEach(msg => {\n                  this.$toasted.show(msg, { className: 'bg-danger' })\n                })\n              } else {\n                this.$toasted.show(response.data.message, {\n                  className: 'bg-danger'\n                })\n              }\n            } else {\n              this.$toasted.show('Something went wrong', {\n                className: 'bg-danger'\n              })\n            }\n          })\n          .finally(() => loader.hide())\n      }\n    }\n  },\n  created() {\n    // if (localStorage.getItem('access_token')) {\n    //   const loader = this.$loading.show()\n    //   checkSession()\n    //     .then(({ data }) => {\n    //       this.$store.commit('CHANGE_USER', data.data)\n    //       this.$store.commit('CHANGE_SESSION', true)\n    //       this.$router.replace('/dashboard')\n    //     })\n    //     .catch(() => {\n    //       localStorage.clear()\n    //       this.$store.commit('CHANGE_SESSION', false)\n    //     })\n    //     .finally(() => loader.hide())\n    // }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  height: 100%;\n}\n</style>\n"]}]}