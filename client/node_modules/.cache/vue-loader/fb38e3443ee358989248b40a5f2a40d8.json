{"remainingRequest":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/src/components/SignIn.vue?vue&type=style&index=0&id=fb473e1c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/src/components/SignIn.vue","mtime":1576132122725},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aliftaufik/Documents/hacktiv8/hacktiv8-phase-2-repeat/portofolio/lazalopedia/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGFpbmVyIHsKICBoZWlnaHQ6IDEwMCU7Cn0K"},{"version":3,"sources":["SignIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA","file":"SignIn.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container row mx-auto justify-content-center align-items-center\">\n    <b-jumbotron\n      header-level=\"5\"\n      bg-variant=\"transparent\"\n      class=\"col-12 d-flex text-center pb-0 mb-0\"\n      id=\"landing-page\"\n      fluid\n    >\n      <template v-slot:header>Sign In</template>\n    </b-jumbotron>\n    <b-form\n      class=\"col-12 col-md-8 col-lg-6 col-xl-5 align-self-start\"\n      @submit.prevent=\"onSubmit\"\n      novalidate\n    >\n      <b-form-group label-for=\"emailUsername\">\n        <b-form-input\n          id=\"emailUsername\"\n          v-model.trim=\"emailUsername\"\n          type=\"text\"\n          :state=\"emailUsernameValid\"\n          placeholder=\"Username or Email\"\n          @focus=\"emailUsernameValid = null\"\n          required\n        ></b-form-input>\n      </b-form-group>\n\n      <b-form-group label-for=\"password\">\n        <b-form-input\n          id=\"password\"\n          v-model=\"password\"\n          type=\"password\"\n          :state=\"passwordValid\"\n          placeholder=\"Password\"\n          @focus=\"passwordValid = null\"\n          required\n        ></b-form-input>\n      </b-form-group>\n\n      <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n        <b-button type=\"submit\" variant=\"primary\">Sign In</b-button>\n        <span class=\"mt-2 mt-sm-0\">\n          Don't have an account?\n          <router-link :to=\"`/session?from=${$route.query.from}&on=signup`\"\n            >Sign Up</router-link\n          ></span\n        >\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SignIn',\n  data() {\n    return {\n      emailUsername: '',\n      password: '',\n      emailUsernameValid: null,\n      passwordValid: null\n    }\n  },\n  methods: {\n    onSubmit() {\n      let isValid = true\n      const { emailUsername, password } = this\n      if (!emailUsername) {\n        this.emailUsernameValid = false\n        isValid = false\n      }\n      if (!password) {\n        this.passwordValid = false\n        isValid = false\n      }\n      if (isValid) {\n        const loader = this.$loading.show()\n        this.$store\n          .dispatch('ON_SIGN_IN', {\n            emailUsername,\n            password\n          })\n          .then(({ data }) => {\n            this.$toasted.show(data.message)\n            this.$router.replace(this.$route.query.from)\n          })\n          .catch(({ response }) => {\n            this.emailUsernameValid = null\n            this.passwordValid = null\n            this.password = ''\n            if (response) {\n              const message = response.data.message\n              if (typeof message != 'string') {\n                response.data.message.forEach(msg => {\n                  this.$toasted.show(msg, { className: 'bg-danger' })\n                })\n              } else {\n                this.$toasted.show(response.data.message, {\n                  className: 'bg-danger'\n                })\n              }\n            } else {\n              this.$toasted.show('Something went wrong', {\n                className: 'bg-danger'\n              })\n            }\n          })\n          .finally(() => loader.hide())\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  height: 100%;\n}\n</style>\n"]}]}